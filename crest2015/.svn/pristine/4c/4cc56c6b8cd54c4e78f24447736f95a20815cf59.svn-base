@extends('site.layouts.default')

{{-- Web site Title --}}
@section('title')
{{{ Lang::get("trainee_ledger.trainee_ledger") }}} :: @parent
@stop
{{-- Content --}}
@section('content')
<div class="page-header">
		<h2>
			{{{ Lang::get("trainee_ledger.trainee_ledger") }}}
			
		</h2>
	</div>
	<input type="hidden" name="_token" value="{{{ csrf_token() }}}" />
	<div class="col-md-8">
		<div class="form-group {{{ $errors->has('trainee_id') ? 'has-error' : '' }}}">
			<label class="col-md-2 control-label" for="trainee_name">{!! Lang::get('payment.trainee_id') !!}</label>
			<input type="hidden" name="trainee_id" id="trainee_id" value="0" />
			<div class="col-md-10">
					<input class="typeahead form-control" type="text" name="trainee_name" id="trainee_name" value="" />
				{!! $errors->first('trainee_id', '<label class="control-label" for="trainee_name">:message</label>')!!}

			</div>
		</div>
	</div>
	<table id="table" class="table table-striped table-hover">
		<thead>
			<tr>
				<th>{{ Lang::get("trainee_ledger.date") }}</th>
				<th> {{ Lang::get("trainee_ledger.type") }}</th>
				<th> {{ Lang::get("trainee_ledger.debit") }}</th>
				<th> {{ Lang::get("trainee_ledger.credit") }}</th>
				<th> {{ Lang::get("trainee_ledger.or_no") }}</th>
				<th> {{ Lang::get("trainee_ledger.ar_no") }}</th>
				<th> {{ Lang::get("trainee_ledger.remark") }}</th>
				<th> {{ Lang::get("trainee_ledger.balance") }}</th>				
			</tr>
		</thead>
		<tbody>
		</tbody>
	</table>
@stop
    
{{-- Scripts --}}
@section('scripts')
	<script type="text/javascript">
		var oTable;
		$(document).ready(function() {
			oTable = $('#table').dataTable( {
				"sDom": "<'row'<'col-md-6'l><'col-md-6'f>r>t<'row'<'col-md-6'i><'col-md-6'p>>",
				"sPaginationType": "bootstrap",

				"bProcessing": true,
		        "bServerSide": true,
		        "sAjaxSource": "{{ URL::to('trainee_ledger/data?') }}"+"trainee_id="+$("#trainee_id").val(),
		        "fnDrawCallback": function ( oSettings ) {
	           		
	     		}
			});
			var startPosition;
           var endPosition;
           $("#table tbody").sortable({
            cursor : "move",
                start : function(event, ui) {
                    startPosition = ui.item.prevAll().length + 1;
               },
               update : function(event, ui) {
                    endPosition = ui.item.prevAll().length + 1;
                    var navigationList = "";
                    $('#table #row').each(function(i) {
                        navigationList = navigationList + ',' + $(this).val();
                    });
                    $.getJSON("{{ URL::to('trainee_ledger/reorder') }}", {
                        list : navigationList
                    }, function(data) {
                    });
                }
            });
		});
	</script>

	<script type="text/javascript">
    $(function() {
            var substringMatcher = function(strs) {
                      return function findMatches(q, cb) {
                        var matches, substringRegex;
                     
                        // an array that will be populated with substring matches
                        matches = [];
                     
                        // regex used to determine if a string contains the substring `q`
                        substrRegex = new RegExp(q, 'i');
                     
                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(strs, function(i, str) {
                          if (substrRegex.test(str)) {
                            matches.push(str);
                          }
                        });
                     
                        cb(matches);
                      };
                    };


            /********
                RMD 2015-03-07
                START OF AWB_HBL_No ->  typeahead
            *************************************************************************/
                var trainee_list = new Bloodhound({
                        datumTokenizer: function (datum) {
                            //return Bloodhound.tokenizers.whitespace(datum.trainee_name);
                               var tokens = [];
                                //the available string is 'name' in your datum
                                var stringSize = datum.trainee_name.length;
                                //multiple combinations for every available size
                                //(eg. dog = d, o, g, do, og, dog)
                                for (var size = 1; size <= stringSize; size++){          
                                  for (var i = 0; i+size<= stringSize; i++){
                                      tokens.push(datum.trainee_name.substr(i, size));
                                  }
                                }

                                return tokens;    


                        },
                        queryTokenizer: Bloodhound.tokenizers.whitespace,
                        limit: 10,
                       /* prefetch: {
                            // url points to a json file that contains an array of country names, see
                            // https://github.com/twitter/typeahead.js/blob/gh-pages/data/countries.json
                            //url: '../../its/its_import_entry/dataJson',
                            //url:'http://boc.itechrar.com/its/its_import_entry/dataJson',
                            url:'../trainee/dataJson',
                            
                            // the json file contains an array of strings, but the Bloodhound
                            // suggestion engine expects JavaScript objects so this converts all of
                            // those strings
                             filter: function (trainee_list) {
                                      // alert('this is an alert script from create');
                                  // console.log(trainee_list); //debugging
                                    // Map the remote source JSON array to a JavaScript object array
                                    return $.map(trainee_list, function (trainee) {
                                        console.log(trainee); //debugging
                                        return {
                                            trainee_name: trainee.last_name + ','+trainee.first_name + ' ' + trainee.middle_name + ' ' + trainee.trainee_no,
                                            id: trainee.id
                                        };
                                    });
                            }
                        },*/
                        remote:{
                        	url:'trainee/dataJson?query=%QUERY',
                        	filter: function (trainee_list) {
                                      // alert('this is an alert script from create');
                                  // console.log(trainee_list); //debugging
                                    // Map the remote source JSON array to a JavaScript object array
                                    return $.map(trainee_list, function (trainee) {
                                        console.log(trainee); //debugging
                                        return {
                                            trainee_name: trainee.last_name + ', '+trainee.first_name + ' ' + trainee.middle_name + ' - ' + trainee.trainee_no,
                                            id: trainee.id
                                        };
                                    });
                             }
                        }

                });

                trainee_list.initialize();
                 console.log(trainee_list);

                //its_customs_office_code_typeahead   -- this is the id of the div element that handles typeahead for export country name
               // $('#trainee_trainee_no_typeahead .typeahead').typeahead(null, {
                  $('#trainee_name').typeahead(
                    {
                      hint: true,
                      highlight: true,
                      minLength: 1
                    }, 
                    {
                        trainee_name: 'trainee_list',
                         displayKey: 'trainee_name',
                        source: trainee_list.ttAdapter()
                        

                    }

                    ).bind("typeahead:selected", function(obj, trainee, trainee_no) {
                        console.log(trainee);
  
                       $("#trainee_id").val(trainee.id);
                       $("#trainee_name").val(trainee.trainee_name);

                      //reload trainee ledger entries
                        oTable.fnClearTable(0);

                        oTable.fnReloadAjax('trainee_ledger/data?trainee_id='+trainee.id);


                    });

                   /********
                END OF AWB_HBL_NO ->  typeahead
            *************************************************************************/


                   
    });


</script>


@stop